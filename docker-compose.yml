version: '2.4' # seems conter intuitive but 2 version support helthcheck and not 3.

services:

  # nc localhost 6379
  # $ AUTH screeb
  redis:
    image: bitnami/redis:6.2
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=screeb

  # clickhouse-cli -h 127.0.0.1 --port 9000 -u screeb --password screeb
  clickhouse:
    image: clickhouse/clickhouse-server
    ports:
      - 8123:8123
      - 9000:9000
      - 9009:9009
      - 9363:9363
    environment:
      - CLICKHOUSE_USER=screeb
      - CLICKHOUSE_PASSWORD=screeb
      - CLICKHOUSE_DB=screeb
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1

  # curl http://elastic:screeb@localhost:9200/_cat
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.2
    ports:
      - "9200:9200"
    environment:
      - ELASTIC_PASSWORD=screeb
      - discovery.type=single-node
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"

  # http://localhost:15672
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=screeb
      - RABBITMQ_DEFAULT_PASS=screeb
    healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "status", "-qs", "--formatter=json"]
        interval: 5s
        timeout: 3s
        retries: 5
        start_period: 3s

  # https://github.com/conduktor/kafka-stack-docker-compose/blob/master/zk-single-kafka-single.yml
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
  kafka:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper
